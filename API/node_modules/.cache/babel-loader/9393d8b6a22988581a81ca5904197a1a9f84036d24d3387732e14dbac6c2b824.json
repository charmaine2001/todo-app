{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charmie\\\\Pictures\\\\REACT\\\\todo-app\\\\src\\\\components\\\\Lists\\\\TodoList.js\",\n  _s = $RefreshSig$();\n// import Todo from './Todo';\n// import TodoNavBar from '../TodoNavBar';\n// import { useNavigate } from 'react-router-dom';\n\n// function TodoList({ todos }) {\n\n//     const navigate = useNavigate();\n\n//     const handleAddTask = () => {\n//         navigate('/Todos');\n//     };\n\n//     return (\n//         <div>\n//             {todos.length === 0 ? (\n//                 <div className=\"w-full p-4 text-center text-navy-gray\">\n//                     <button onClick = {handleAddTask} className=\"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\">\n//                         Add your new task\n//                     </button>\n//                 </div>\n//             ) : (\n//                 todos.map(todo => (\n//                     <Todo key={todo.id} todo={todo} />\n//                 ))\n//             )}\n//         </div>\n//     );\n// };\n\n// export default TodoList;\n\nimport { useNavigate } from 'react-router-dom';\nimport TodoNavBar from '../TodoNavBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoList({\n  todos\n}) {\n  _s();\n  const navigate = useNavigate();\n  const handleNewList = () => {\n    navigate('/Todos');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4\",\n    children: [/*#__PURE__*/_jsxDEV(TodoNavBar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold\",\n      children: \"My Todos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-disc pl-5\",\n      children: todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: todo.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: [\"- Due: \", todo.dueDate]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"ml-2\",\n          children: [\"- Priority: \", todo.priority]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap content-center\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNewList,\n        className: \"rounded py-2 px-2 mx-2 my-2\",\n        children: \"add new todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoList, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["useNavigate","TodoNavBar","jsxDEV","_jsxDEV","TodoList","todos","_s","navigate","handleNewList","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","todo","index","title","dueDate","priority","onClick","_c","$RefreshReg$"],"sources":["C:/Users/charmie/Pictures/REACT/todo-app/src/components/Lists/TodoList.js"],"sourcesContent":["// import Todo from './Todo';\r\n// import TodoNavBar from '../TodoNavBar';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function TodoList({ todos }) {\r\n\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleAddTask = () => {\r\n//         navigate('/Todos');\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             {todos.length === 0 ? (\r\n//                 <div className=\"w-full p-4 text-center text-navy-gray\">\r\n//                     <button onClick = {handleAddTask} className=\"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\">\r\n//                         Add your new task\r\n//                     </button>\r\n//                 </div>\r\n//             ) : (\r\n//                 todos.map(todo => (\r\n//                     <Todo key={todo.id} todo={todo} />\r\n//                 ))\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default TodoList;\r\n\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\nimport TodoNavBar from '../TodoNavBar';\r\n\r\n\r\n\r\nfunction TodoList({ todos }) {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleNewList = () => {\r\n        navigate('/Todos');\r\n    };\r\n\r\n\r\n    return (\r\n        <div className=\"mt-4\">\r\n            <TodoNavBar/>\r\n            <h2 className=\"text-lg font-semibold\">My Todos</h2>\r\n            <ul className=\"list-disc pl-5\">\r\n                {todos.map((todo, index) => (\r\n                    <li key={index} className=\"mb-2\">\r\n                        <span className=\"font-bold\">{todo.title}</span>\r\n                        <span className=\"ml-2\">- Due: {todo.dueDate}</span>\r\n                        <span className=\"ml-2\">- Priority: {todo.priority}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className='flex flex-wrap content-center'>\r\n                <button onClick={handleNewList} className='rounded py-2 px-2 mx-2 my-2'>\r\n                    add new todo\r\n                </button>\r\n            </div>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoList;"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,UAAU,MAAM,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAIvC,SAASC,QAAQA,CAAC;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EAEzB,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAE9B,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IACxBD,QAAQ,CAAC,QAAQ,CAAC;EACtB,CAAC;EAGD,oBACIJ,OAAA;IAAKM,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACjBP,OAAA,CAACF,UAAU;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACbX,OAAA;MAAIM,SAAS,EAAC,uBAAuB;MAAAC,QAAA,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDX,OAAA;MAAIM,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EACzBL,KAAK,CAACU,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACnBd,OAAA;QAAgBM,SAAS,EAAC,MAAM;QAAAC,QAAA,gBAC5BP,OAAA;UAAMM,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAEM,IAAI,CAACE;QAAK;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eAC/CX,OAAA;UAAMM,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,SAAO,EAACM,IAAI,CAACG,OAAO;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,eACnDX,OAAA;UAAMM,SAAS,EAAC,MAAM;UAAAC,QAAA,GAAC,cAAY,EAACM,IAAI,CAACI,QAAQ;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC;MAAA,GAHpDG,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF,CAAC,eACLX,OAAA;MAAKM,SAAS,EAAC,+BAA+B;MAAAC,QAAA,eAC1CP,OAAA;QAAQkB,OAAO,EAAEb,aAAc;QAACC,SAAS,EAAC,6BAA6B;QAAAC,QAAA,EAAC;MAExE;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AAEd;AAACR,EAAA,CA9BQF,QAAQ;EAAA,QAEIJ,WAAW;AAAA;AAAAsB,EAAA,GAFvBlB,QAAQ;AAgCjB,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}