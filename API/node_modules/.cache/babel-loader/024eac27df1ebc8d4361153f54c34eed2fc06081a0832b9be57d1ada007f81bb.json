{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\charmie\\\\Pictures\\\\REACT\\\\todo-app\\\\src\\\\components\\\\Todos\\\\TodoForm.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { useNavigate } from 'react-router-dom';\n\n// function TodoForm({ addTodo }) {\n//     const [taskName, setTaskName] = useState('');\n//     const [dueDate, setDueDate] = useState('');\n//     const [priority, setPriority] = useState(1);\n//     const navigate = useNavigate();\n\n//     const handleSubmit = (e) => {\n//         e.preventDefault();\n//         if (taskName.trim() !== '' && dueDate) {\n//             const newTodo = {\n//                 id: Date.now(),\n//                 message: taskName,\n//                 dueDate,\n//                 priority,\n//             };\n//             addTodo(newTodo);\n//             setTaskName('');\n//             setDueDate('');\n//             setPriority(1); \n//         }\n//         // console.log('Task added:',task);\n//         navigate('/TodoList')\n//     };\n\n//     return (\n//         <form onSubmit={handleSubmit} className=\"flex flex-col mb-4\">\n//             <input\n//                 type=\"text\"\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\n//                 value={taskName}\n//                 onChange={(e) => setTaskName(e.target.value)}\n//                 placeholder=\"Task name\"\n//             />\n//             <input\n//                 type=\"date\"\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\n//                 value={dueDate}\n//                 onChange={(e) => setDueDate(e.target.value)}\n//             />\n//             <label className=\"mb-2 text-navy-gray\">Priority:</label>\n//             <select\n//                 value={priority}\n//                 onChange={(e) => setPriority(e.target.value)}\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\n//             >\n//                 <option value={1}>1 - Low</option>\n//                 <option value={2}>2 - Medium</option>\n//                 <option value={3}>3 - High</option>\n//             </select>\n//             <button\n//                 type=\"submit\"\n//                 className=\"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\"\n//             >\n//                 Add Task\n//             </button>\n//         </form>\n//     );\n// };\n\n// export default TodoForm;\n\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TodoForm() {\n  _s();\n  const [taskName, setTaskName] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [priority, setPriority] = useState(1);\n  const navigate = useNavigate();\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (taskName.trim() !== '' && dueDate) {\n      const newTodo = {\n        title: taskName,\n        // Adjusted to match your backend's expected field\n        completed: false // Assuming new todos are not completed by default\n      };\n      try {\n        const response = await fetch('http://localhost:5000/api/todos', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(newTodo)\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const data = await response.json();\n        console.log('Todo added:', data); // Log success message\n        setTaskName('');\n        setDueDate('');\n        setPriority(1);\n        navigate('/TodoList');\n      } catch (error) {\n        console.error('Error adding todo:', error);\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"flex flex-col mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      className: \"w-full p-2 mb-4 text-navy-gray\",\n      value: taskName,\n      onChange: e => setTaskName(e.target.value),\n      placeholder: \"Task name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"date\",\n      className: \"w-full p-2 mb-4 text-navy-gray\",\n      value: dueDate,\n      onChange: e => setDueDate(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"mb-2 text-navy-gray\",\n      children: \"Priority:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: priority,\n      onChange: e => setPriority(e.target.value),\n      className: \"w-full p-2 mb-4 text-navy-gray\",\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: 1,\n        children: \"1 - Low\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 2,\n        children: \"2 - Medium\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n        value: 3,\n        children: \"3 - High\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\",\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 9\n  }, this);\n}\n_s(TodoForm, \"g0w3RrCL5UK1q4opEhIEAIP3RSg=\", false, function () {\n  return [useNavigate];\n});\n_c = TodoForm;\nexport default TodoForm;\nvar _c;\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","TodoForm","_s","taskName","setTaskName","dueDate","setDueDate","priority","setPriority","navigate","handleSubmit","e","preventDefault","trim","newTodo","title","completed","response","fetch","method","headers","body","JSON","stringify","ok","Error","data","json","console","log","error","onSubmit","className","children","type","value","onChange","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/charmie/Pictures/REACT/todo-app/src/components/Todos/TodoForm.js"],"sourcesContent":["\r\n// import React, { useState } from 'react';\r\n// import { useNavigate } from 'react-router-dom';\r\n\r\n// function TodoForm({ addTodo }) {\r\n//     const [taskName, setTaskName] = useState('');\r\n//     const [dueDate, setDueDate] = useState('');\r\n//     const [priority, setPriority] = useState(1);\r\n//     const navigate = useNavigate();\r\n\r\n//     const handleSubmit = (e) => {\r\n//         e.preventDefault();\r\n//         if (taskName.trim() !== '' && dueDate) {\r\n//             const newTodo = {\r\n//                 id: Date.now(),\r\n//                 message: taskName,\r\n//                 dueDate,\r\n//                 priority,\r\n//             };\r\n//             addTodo(newTodo);\r\n//             setTaskName('');\r\n//             setDueDate('');\r\n//             setPriority(1); \r\n//         }\r\n//         // console.log('Task added:',task);\r\n//         navigate('/TodoList')\r\n//     };\r\n\r\n//     return (\r\n//         <form onSubmit={handleSubmit} className=\"flex flex-col mb-4\">\r\n//             <input\r\n//                 type=\"text\"\r\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\r\n//                 value={taskName}\r\n//                 onChange={(e) => setTaskName(e.target.value)}\r\n//                 placeholder=\"Task name\"\r\n//             />\r\n//             <input\r\n//                 type=\"date\"\r\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\r\n//                 value={dueDate}\r\n//                 onChange={(e) => setDueDate(e.target.value)}\r\n//             />\r\n//             <label className=\"mb-2 text-navy-gray\">Priority:</label>\r\n//             <select\r\n//                 value={priority}\r\n//                 onChange={(e) => setPriority(e.target.value)}\r\n//                 className=\"w-full p-2 mb-4 text-navy-gray\"\r\n//             >\r\n//                 <option value={1}>1 - Low</option>\r\n//                 <option value={2}>2 - Medium</option>\r\n//                 <option value={3}>3 - High</option>\r\n//             </select>\r\n//             <button\r\n//                 type=\"submit\"\r\n//                 className=\"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\"\r\n//             >\r\n//                 Add Task\r\n//             </button>\r\n//         </form>\r\n//     );\r\n// };\r\n\r\n// export default TodoForm;\r\n\r\n\r\n\r\nimport React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction TodoForm() {\r\n    const [taskName, setTaskName] = useState('');\r\n    const [dueDate, setDueDate] = useState('');\r\n    const [priority, setPriority] = useState(1);\r\n    const navigate = useNavigate();\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        if (taskName.trim() !== '' && dueDate) {\r\n            const newTodo = {\r\n                title: taskName, // Adjusted to match your backend's expected field\r\n                completed: false, // Assuming new todos are not completed by default\r\n            };\r\n\r\n            try {\r\n                const response = await fetch('http://localhost:5000/api/todos', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify(newTodo),\r\n                });\r\n\r\n                if (!response.ok) {\r\n                    throw new Error('Network response was not ok');\r\n                }\r\n\r\n                const data = await response.json();\r\n                console.log('Todo added:', data); // Log success message\r\n                setTaskName('');\r\n                setDueDate('');\r\n                setPriority(1);\r\n                navigate('/TodoList');\r\n            } catch (error) {\r\n                console.error('Error adding todo:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit} className=\"flex flex-col mb-4\">\r\n            <input\r\n                type=\"text\"\r\n                className=\"w-full p-2 mb-4 text-navy-gray\"\r\n                value={taskName}\r\n                onChange={(e) => setTaskName(e.target.value)}\r\n                placeholder=\"Task name\"\r\n            />\r\n            <input\r\n                type=\"date\"\r\n                className=\"w-full p-2 mb-4 text-navy-gray\"\r\n                value={dueDate}\r\n                onChange={(e) => setDueDate(e.target.value)}\r\n            />\r\n            <label className=\"mb-2 text-navy-gray\">Priority:</label>\r\n            <select\r\n                value={priority}\r\n                onChange={(e) => setPriority(e.target.value)}\r\n                className=\"w-full p-2 mb-4 text-navy-gray\"\r\n            >\r\n                <option value={1}>1 - Low</option>\r\n                <option value={2}>2 - Medium</option>\r\n                <option value={3}>3 - High</option>\r\n            </select>\r\n            <button\r\n                type=\"submit\"\r\n                className=\"bg-light-blue hover:bg-blue-100 text-gray-500 font-bold py-2 px-4 rounded\"\r\n            >\r\n                Add Task\r\n            </button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default TodoForm;\r\n\r\n\r\n\r\n\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}